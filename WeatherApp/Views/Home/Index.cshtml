@model WeatherApp.Models.IndexModel
@{
    ViewData["Title"] = "Home Page";
}

<div class="text-center">
    <h1 class="display-4">Weather Data</h1>
        
    <!-- Inputs for coordinates or city -->
    <div class="mb-4">
        <ul class="nav nav-tabs" id="weatherTabs" role="tablist">
            <li class="nav-item" role="presentation">
                <button class="nav-link active" id="coordinates-tab" data-bs-toggle="tab" data-bs-target="#coordinates" type="button" role="tab">By Coordinates</button>
            </li>
            <li class="nav-item" role="presentation">
                <button class="nav-link" id="city-tab" data-bs-toggle="tab" data-bs-target="#city" type="button" role="tab">By City</button>
            </li>
        </ul>
        
        <div class="tab-content p-3 border border-top-0 rounded-bottom">
            <div class="tab-pane fade show active" id="coordinates" role="tabpanel">
                <form method="get" asp-action="Index">
                    <div class="row mb-3">
                        <div class="col-md-6">
                            <label for="latitude">Latitude:</label>
                            <input type="text" id="latitude" name="latitude" class="form-control"
                                   value="@Model.Latitude" pattern="-?\d+(\.\d+)?"
                                   title="Please enter a valid latitude" required />
                        </div>
                        <div class="col-md-6">
                            <label for="longitude">Longitude:</label>
                            <input type="text" id="longitude" name="longitude" class="form-control"
                                   value="@Model.Longitude" pattern="-?\d+(\.\d+)?"
                                   title="Please enter a valid longitude" required />
                        </div>
                        <div class="col-12 mt-2">
                            <button type="button" id="detectLocation" class="btn btn-outline-secondary btn-sm">
                                <i class="bi bi-geo-alt"></i> Use My Location
                            </button>
                        </div>
                    </div>
                    
                    <div class="row mb-3">
                        <div class="col-md-4">
                            <label for="forecastDays">Forecast Days (1-7):</label>
                            <input type="number" id="forecastDays" name="forecastDays" class="form-control" min="1" max="7" value="@Model.ForecastDays" />
                        </div>
                        <div class="col-md-4">
                            <label for="units">Units:</label>
                             
                                <select id="units" name="units" class="form-select">
                                    <option value="metric">Metric (°C, m/s)</option>
                                    <option value="imperial">Imperial (°F, mph)</option>
                                </select>
                            
                        </div>
                        <div class="col-md-4">
                            <label for="sortBy">Sort By:</label>
                            <select id="sortBy" name="SortBy" class="form-select">
                                <option value="">Default</option>
                                <option value="precipitation" >Precipitation (High to Low)</option>
                                <option value="temperature" >Temperature (High to Low)</option>
                            </select>
                        </div>
                    </div>

                    <div class="row mb-3">
                        <div class="col-md-6">
                            <label for="weatherType">Filter by Weather Type:</label>
                            <select id="weatherType" name="WeatherType" class="form-select">
                                                    <option value="" >All Weather Types</option>
                                @foreach (var type in Model.WeatherTypes)
                                {
                                                        <option value="@type" >@type</option>
                                }
                            </select>
                        </div>

                        <div class="col-md-6">
                            <div class="form-check mt-4">
                                <input class="form-check-input" type="checkbox" id="latestSunset" name="latestSunset" value="true" @(Model.LatestSunset ? "checked" : "") />
                                <label class="form-check-label" for="latestSunset">Find day with latest sunset</label>
                            </div>
                        </div>
                    </div>
                    
                    <button type="submit" class="btn btn-primary">Fetch Weather Data</button>
                    <div class="loading-spinner d-none mt-3">
                        <div class="spinner-border text-primary" role="status">
                            <span class="visually-hidden">Loading...</span>
                        </div>
                        <span class="ms-2">Fetching weather data...</span>
                    </div>
                </form>
            </div>
            <div class="tab-pane fade" id="city" role="tabpanel">
                <form method="get" asp-action="ByCity">
                    <div class="row mb-3">
                        <div class="col-md-6">
                            <label for="city">City Name:</label>
                            <input type="text" id="city" name="city" class="form-control" required />
                        </div>
                        <div class="col-md-6">
                            <label for="cityUnits">Units:</label>
                            <select id="cityUnits" name="units" class="form-select">
                                <option value="metric">Metric (°C, m/s)</option>
                                <option value="imperial">Imperial (°F, mph)</option>
                            </select>
                        </div>
                    </div>
                    
                    <div class="row mb-3">
                        <div class="col-md-4">
                            <label for="cityForecastDays">Forecast Days (1-7):</label>
                            <input type="number" id="cityForecastDays" name="forecastDays" class="form-control" min="1" max="7" value="5" />
                        </div>
                        <div class="col-md-4">
                            <label for="citySortBy">Sort By:</label>
                            <select id="citySortBy" name="sortBy" class="form-select">
                                <option value="">Default</option>
                                <option value="precipitation">Precipitation (High to Low)</option>
                            </select>
                        </div>
                        <div class="col-md-4">
                            <label for="cityWeatherType">Filter by Weather Type:</label>
                            <select id="cityWeatherType" name="weatherType" class="form-select">
                                <option value="">All Weather Types</option>
                                @foreach (var type in Model.WeatherTypes)
                                {
                                    <option value="@type">@type</option>
                                }
                            </select>
                        </div>
                    </div>
                    
                    <div class="row mb-3">
                        <div class="col-md-12">
                            <div class="form-check">
                                <input class="form-check-input" type="checkbox" id="cityLatestSunset" name="latestSunset" value="true" />
                                <label class="form-check-label" for="cityLatestSunset">Find day with latest sunset</label>
                            </div>
                        </div>
                    </div>
                    
                    <button type="submit" class="btn btn-primary">Fetch Weather Data</button>
                </form>
            </div>
        </div>
    </div>
    
    <!-- Weather data tabs -->
    @if (Model.Weather != null && !string.IsNullOrEmpty(Model.Weather.Name))
    {
        <div class="card mt-4">
            <div class="card-header">
                <ul class="nav nav-tabs card-header-tabs" id="weatherDataTabs" role="tablist">
                    <li class="nav-item" role="presentation">
                        <button class="nav-link active" id="overview-tab" data-bs-toggle="tab" data-bs-target="#overview" type="button" role="tab">Overview</button>
                    </li>
                    <li class="nav-item" role="presentation">
                        <button class="nav-link" id="temperature-tab" data-bs-toggle="tab" data-bs-target="#temperature" type="button" role="tab">Temperature</button>
                    </li>
                    <li class="nav-item" role="presentation">
                        <button class="nav-link" id="wind-tab" data-bs-toggle="tab" data-bs-target="#wind" type="button" role="tab">Wind</button>
                    </li>
                    <li class="nav-item" role="presentation">
                        <button class="nav-link" id="humidity-tab" data-bs-toggle="tab" data-bs-target="#humidity" type="button" role="tab">Humidity</button>
                    </li>
                    <li class="nav-item" role="presentation">
                        <button class="nav-link" id="forecast-tab" data-bs-toggle="tab" data-bs-target="#forecast" type="button" role="tab">Forecast</button>
                    </li>
                    @if (Model.LatestSunset)
                    {
                        <li class="nav-item" role="presentation">
                            <button class="nav-link" id="sunset-tab" data-bs-toggle="tab" data-bs-target="#sunset" type="button" role="tab">Latest Sunset</button>
                        </li>
                    }
                </ul>
            </div>
            
            <div class="card-body">
                <h5 class="card-title">@Model.Weather.Name Weather (@Model.GetTemperatureUnit())</h5>
                
                <div class="tab-content" id="weatherDataTabContent">
                    <!-- Overview Tab -->
                    <div class="tab-pane fade show active" id="overview" role="tabpanel">
                        <div class="row">
                            <div class="col-md-6 text-center">
                                @if (Model.Weather.WeatherInfo.Count > 0)
                                {
                                    <img src="https://openweathermap.org/img/wn/@(Model.Weather.WeatherInfo[0].Icon)@@2x.png" alt="Weather Icon" />
                                    <p class="h4">@Model.Weather.WeatherInfo[0].Main</p>
                                    <p>@Model.Weather.WeatherInfo[0].Description</p>
                                }
                            </div>
                            <div class="col-md-6">
                                <ul class="list-group">
                                    <li class="list-group-item d-flex justify-content-between">
                                        <span>Temperature:</span> <strong>@Model.Weather.Main.Temp@Model.GetTemperatureUnit()</strong>
                                    </li>
                                    <li class="list-group-item d-flex justify-content-between">
                                        <span>Humidity:</span> <strong>@Model.Weather.Main.Humidity%</strong>
                                    </li>
                                    <li class="list-group-item d-flex justify-content-between">
                                        <span>Wind Speed:</span> <strong>@Model.Weather.Wind.Speed @Model.GetSpeedUnit()</strong>
                                    </li>
                                </ul>
                            </div>
                        </div>
                    </div>
                    
                    <!-- Temperature Tab -->
                    <div class="tab-pane fade" id="temperature" role="tabpanel">
                        <div class="row">
                            <div class="col-md-12">
                                <ul class="list-group">
                                    <li class="list-group-item d-flex justify-content-between">
                                        <span>Current Temperature:</span> <strong>@Model.Weather.Main.Temp@Model.GetTemperatureUnit()</strong>
                                    </li>
                                    <li class="list-group-item d-flex justify-content-between">
                                        <span>Feels Like:</span> <strong>@Model.Weather.Main.FeelsLike@Model.GetTemperatureUnit()</strong>
                                    </li>
                                    <li class="list-group-item d-flex justify-content-between">
                                        <span>Minimum Temperature:</span> <strong>@Model.Weather.Main.TempMin@Model.GetTemperatureUnit()</strong>
                                    </li>
                                    <li class="list-group-item d-flex justify-content-between">
                                        <span>Maximum Temperature:</span> <strong>@Model.Weather.Main.TempMax@Model.GetTemperatureUnit()</strong>
                                    </li>
                                    <li class="list-group-item d-flex justify-content-between">
                                        <span>Pressure:</span> <strong>@Model.Weather.Main.Pressure hPa</strong>
                                    </li>
                                </ul>
                            </div>
                        </div>
                    </div>

                    <!-- Wind Tab -->
                    <div class="tab-pane fade" id="wind" role="tabpanel">
                        <div class="row">
                            <div class="col-md-6">
                                <ul class="list-group">
                                    <li class="list-group-item d-flex justify-content-between">
                                        <span>Wind Speed:</span> <strong>@Model.Weather.Wind.Speed @Model.GetSpeedUnit()</strong>
                                    </li>
                                    <li class="list-group-item d-flex justify-content-between">
                                        <span>Wind Direction:</span> <strong>@Model.Weather.Wind.Deg°</strong>
                                    </li>
                                </ul>
                            </div>
                            <div class="col-md-6 text-center">
                                <i class="bi bi-arrow-up" style="transform: rotate(@(Model.Weather.Wind.Deg)deg); font-size: 2rem;"></i>
                                <p class="mt-2">Wind Direction</p>
                            </div>
                        </div>
                    </div>
                    
                    <!-- Humidity Tab -->
                    <div class="tab-pane fade" id="humidity" role="tabpanel">
                        <div class="row">
                            <div class="col-md-12">
                                <ul class="list-group">
                                    <li class="list-group-item d-flex justify-content-between">
                                        <span>Humidity:</span> <strong>@Model.Weather.Main.Humidity%</strong>
                                    </li>
                                    <li class="list-group-item d-flex justify-content-between">
                                        <span>Clouds:</span> <strong>@Model.Weather.Clouds.All%</strong>
                                    </li>
                                    <li class="list-group-item d-flex justify-content-between">
                                        <span>Visibility:</span> <strong>@(Model.Weather.Visibility / 1000) km</strong>
                                    </li>
                                </ul>
                            </div>
                        </div>
                    </div>

                    <!-- Forecast Tab -->
                    <div class="tab-pane fade" id="forecast" role="tabpanel">
                        @if (!string.IsNullOrEmpty(Model.WeatherType))
                        {
                            <div class="alert alert-info mb-3">
                                Filtered to show only: <strong>@Model.WeatherType</strong> weather conditions
                            </div>
                        }

                        @if (Model.SortBy == "precipitation")
                        {
                            <div class="alert alert-info mb-3">
                                Sorted by precipitation (high to low)
                            </div>
                        }

                        <div class="row">
                            @if (Model.Forecast?.List?.Any() == true)
                            {
                                @foreach (var item in Model.Forecast.List)
                                {
                                    <div class="col-lg-3 col-md-4 col-sm-6 mb-3">
                                        <div class="card h-100">
                                            <div class="card-header text-center">
                                                <strong>@DateTime.UnixEpoch.AddSeconds(item.Dt).ToString("MMM dd, HH:mm")</strong>
                                            </div>
                                            <div class="card-body">
                                                @if (item.Weather.Count > 0)
                                                {
                                                    <div class="text-center mb-2">
                                                        <img src="https://openweathermap.org/img/wn/@(item.Weather[0].Icon)@@2x.png" alt="Weather Icon" />
                                                        <p class="fw-bold mb-0">@item.Weather[0].Main</p>
                                                        <p>@item.Weather[0].Description</p>
                                                    </div>
                                                }
                                                <ul class="list-group">
                                                    <li class="list-group-item d-flex justify-content-between">
                                                        <span>Temperature:</span> <strong>@item.Main.Temp@Model.GetTemperatureUnit()</strong>
                                                    </li>
                                                    <li class="list-group-item d-flex justify-content-between">
                                                        <span>Feels like:</span> <strong>@item.Main.FeelsLike@Model.GetTemperatureUnit()</strong>
                                                    </li>
                                                    <li class="list-group-item d-flex justify-content-between">
                                                        <span>Humidity:</span> <strong>@item.Main.Humidity%</strong>
                                                    </li>
                                                    @if (Model.SortBy == "precipitation")
                                                    {
                                                        <li class="list-group-item d-flex justify-content-between bg-light">
                                                            <span>Precipitation:</span>
                                                            <strong>
                                                                @{
                                                                    double precipAmount = 0;
                                                                    if (item.Rain != null && item.Rain.ThreeHours.HasValue)
                                                                    {
                                                                        precipAmount = item.Rain.ThreeHours.Value;
                                                                    }
                                                                    else if (item.Snow != null && item.Snow.ThreeHours.HasValue)
                                                                    {
                                                                        precipAmount = item.Snow.ThreeHours.Value;
                                                                    }
                                                                }
                                                                @precipAmount mm
                                                            </strong>
                                                        </li>
                                                    }
                                                    <li class="list-group-item d-flex justify-content-between">
                                                        <span>Wind:</span> <strong>@item.Wind.Speed @Model.GetSpeedUnit()</strong>
                                                    </li>
                                                </ul>
                                            </div>
                                        </div>
                                    </div>
                                }
                            }
                            else
                            {
                                <div class="col-12">
                                    <div class="alert alert-warning">
                                        No forecast data available or no data matches the selected filters.
                                    </div>
                                </div>
                            }
                        </div>
                    </div>

                   

                    <!-- Latest Sunset Tab -->
                    @if (Model.LatestSunset && Model.LatestSunsetDay != null)
                    {
                        <div class="tab-pane fade" id="sunset" role="tabpanel">
                            <div class="card">
                                <div class="card-header bg-warning text-dark">
                                    <h5 class="mb-0">Day with Latest Sunset</h5>
                                </div>
                                <div class="card-body">
                                    <div class="row">
                                        <div class="col-md-6 text-center">
                                            <h4>@Model.LatestSunsetDay.Date.ToString("dddd, MMMM d, yyyy")</h4>
                                            @if (Model.LatestSunsetDay.Weather != null && Model.LatestSunsetDay.Weather.Count > 0)
                                            {
                                                <img src="https://openweathermap.org/img/wn/@(Model.LatestSunsetDay.Weather[0].Icon)@@2x.png" alt="Weather Icon" class="img-fluid" style="width: 150px;" />
                                                <p class="h4">@Model.LatestSunsetDay.Weather[0].Main</p>
                                                <p>@Model.LatestSunsetDay.Weather[0].Description</p>
                                            }
                                        </div>
                                        <div class="col-md-6">
                                            <div class="card mb-3">
                                                <div class="card-header bg-info text-white">
                                                    <span>Sun Information</span>
                                                </div>
                                                <div class="card-body">
                                                    <ul class="list-group">
                                                        <li class="list-group-item d-flex justify-content-between">
                                                            <span>Sunset Time:</span>
                                                            <strong>@Model.LatestSunsetDay.SunsetTime.ToLocalTime().ToString("HH:mm")</strong>
                                                        </li>
                                                        <li class="list-group-item d-flex justify-content-between">
                                                            <span>Sunrise Time:</span>
                                                            <strong>@Model.LatestSunsetDay.SunriseTime.ToLocalTime().ToString("HH:mm")</strong>
                                                        </li>
                                                        <li class="list-group-item d-flex justify-content-between">
                                                            <span>Daylight Hours:</span>
                                                            <strong>
                                                                @{
                                                                    var daylightHours = (Model.LatestSunsetDay.SunsetTime - Model.LatestSunsetDay.SunriseTime).TotalHours;
                                                                    @daylightHours.ToString("F1") <text> hours</text>
                                                                }
                                                            </strong>
                                                        </li>
                                                    </ul>
                                                </div>
                                            </div>

                                            <div class="card">
                                                <div class="card-header bg-primary text-white">
                                                    <span>Weather Details</span>
                                                </div>
                                                <div class="card-body">
                                                    <ul class="list-group">
                                                        <li class="list-group-item d-flex justify-content-between">
                                                            <span>Max Temperature:</span>
                                                            <strong>@Model.LatestSunsetDay.Temp.Max@Model.GetTemperatureUnit()</strong>
                                                        </li>
                                                        <li class="list-group-item d-flex justify-content-between">
                                                            <span>Min Temperature:</span>
                                                            <strong>@Model.LatestSunsetDay.Temp.Min@Model.GetTemperatureUnit()</strong>
                                                        </li>
                                                        <li class="list-group-item d-flex justify-content-between">
                                                            <span>Day Temperature:</span>
                                                            <strong>@Model.LatestSunsetDay.Temp.Day@Model.GetTemperatureUnit()</strong>
                                                        </li>
                                                        <li class="list-group-item d-flex justify-content-between">
                                                            <span>Night Temperature:</span>
                                                            <strong>@Model.LatestSunsetDay.Temp.Night@Model.GetTemperatureUnit()</strong>
                                                        </li>
                                                        <li class="list-group-item d-flex justify-content-between">
                                                            <span>Humidity:</span>
                                                            <strong>@Model.LatestSunsetDay.Humidity%</strong>
                                                        </li>
                                                        <li class="list-group-item d-flex justify-content-between">
                                                            <span>Wind Speed:</span>
                                                            <strong>@Model.LatestSunsetDay.WindSpeed @Model.GetSpeedUnit()</strong>
                                                        </li>
                                                        <li class="list-group-item d-flex justify-content-between">
                                                            <span>Probability of Precipitation:</span>
                                                            <strong>@(Model.LatestSunsetDay.Pop * 100)%</strong>
                                                        </li>
                                                    </ul>
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                    }


                </div>
            </div>
        </div>
    }
</div>


@section Scripts {
    <script>
        
        document.addEventListener('DOMContentLoaded', function () {
            var triggerTabList = [].slice.call(document.querySelectorAll('#weatherTabs button, #weatherDataTabs button'))
            triggerTabList.forEach(function (triggerEl) {
                var tabTrigger = new bootstrap.Tab(triggerEl)
                triggerEl.addEventListener('click', function (event) {
                    event.preventDefault()
                    tabTrigger.show()
                })
            })
        });
        // Add geolocation feature
        document.getElementById('detectLocation').addEventListener('click', function() {
            if (navigator.geolocation) {
                navigator.geolocation.getCurrentPosition(function(position) {
                    document.getElementById('latitude').value = position.coords.latitude;
                    document.getElementById('longitude').value = position.coords.longitude;
                });
            } else {
                alert("Geolocation is not supported by this browser.");
            }
        });

        
        // Show loading spinner
        document.querySelectorAll('form').forEach(form => {
            form.addEventListener('submit', function() {
                this.querySelector('.loading-spinner').classList.remove('d-none');
                this.querySelector('button[type="submit"]').disabled = true;
            });
        });
    </script>
}